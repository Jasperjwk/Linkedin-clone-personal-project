{"version":3,"sources":["InputOption.js","features/userSlice.js","Post.js","firebase.js","Feed.js","HeaderOption.js","Header.js","Sidebar.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["InputOption","Icon","title","color","className","style","userSlice","createSlice","name","initialState","user","reducers","login","state","action","value","payload","logout","actions","selectUser","Post","forwardRef","ref","description","message","photoUrl","useSelector","Avatar","src","displayName","ThumbUpAltOutlinedIcon","ChatBubbleOutlineOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","onChange","e","target","type","onClick","preventDefault","add","email","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","HeaderOption","avatar","Header","dispatch","useDispatch","alt","placeholder","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e9911a4.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./InputOption.css\"\r\n\r\nfunction InputOption({ Icon, title, color }) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon style={{ color: color }}/>\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOption\r\n","import {createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null,\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      // state.user = action.payload;\n      state.value = action.payload;\n    },\n    logout: (state) => {\n      state.value = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// Pull from the data layer\nexport const selectUser = (state) => state.user.value;\n\nexport default userSlice.reducer;\n","import { Avatar } from '@material-ui/core'\r\nimport React, {forwardRef } from 'react'\r\nimport \"./Post.css\"\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport InputOption from './InputOption';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\n\r\nconst Post = forwardRef (({ name, description, message, photoUrl}, ref) => {\r\n    const user = useSelector(selectUser);\r\n\r\n    return (\r\n        <div ref={ref} className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar src = {photoUrl}>{name[0]}</Avatar>\r\n                <div className=\"post__info\">\r\n                    <h2>{user.displayName}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className=\"post__buttons\">\r\n                <InputOption Icon = {ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\"/>\r\n                <InputOption Icon = {ChatBubbleOutlineOutlinedIcon} title=\"Comment\" color=\"gray\"/>\r\n                <InputOption Icon = {ShareOutlinedIcon} title=\"Share\" color=\"gray\"/>\r\n                <InputOption Icon = {SendOutlinedIcon} title=\"Send\" color=\"gray\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Post\r\n\r\n\r\n\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyANAeV3GrrGJgj7AhGvhgRqAvH-4PEwL_E\",\r\n    authDomain: \"linkedin-clone-personalproject.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-personalproject\",\r\n    storageBucket: \"linkedin-clone-personalproject.appspot.com\",\r\n    messagingSenderId: \"153405744273\",\r\n    appId: \"1:153405744273:web:07652cb49912e5a61d0b30\",\r\n    measurementId: \"G-3GTTE3B7SQ\"\r\n  };\r\n\r\n//   Sets everything up\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n//   I have access to the variable\r\n  const db = firebaseApp.firestore();\r\n//   Get access to auth\r\n  const auth = firebase.auth();\r\n\r\n//   Can use db and auth throughout the app\r\n  export {db, auth};","import React, { useEffect, useState } from 'react';\r\nimport \"./Feed.css\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport InputOption from './InputOption';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport Post from './Post';\r\nimport { db } from \"./firebase\";\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nfunction Feed() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [posts, setPosts] = useState([]);\r\n    const user = useSelector(selectUser);\r\n\r\n    // Use effect fires off the code when Feed component loads\r\n\r\n    useEffect(() => {\r\n        // Connect to db\r\n        // Snapshot - get real time database\r\n        db.collection(\"posts\").orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot(snapshot => (\r\n            // In the collection, there are many docs\r\n            setPosts(snapshot.docs.map(doc => (\r\n                {\r\n                    id: doc.id, \r\n                    data: doc.data(),\r\n                }\r\n            )))\r\n        ))\r\n    }, [])\r\n    \r\n\r\n    const sendPost = e => {\r\n        e.preventDefault();\r\n\r\n        db.collection('posts').add({\r\n            name: user.displayName,\r\n            description: user.email,\r\n            message: input,\r\n            photoUrl: user.photoUrl || \"\",\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })   \r\n        \r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__inputContainer\">\r\n                <div className=\"feed__input\">\r\n                    <CreateIcon/>\r\n                    <form>\r\n                        <input value ={input} onChange={e => setInput(e.target.value)} type=\"text\"/>\r\n                        <button onClick={sendPost} type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed__inputOptions\">\r\n                    <InputOption Icon={ImageIcon} title='Photo' color=\"#70B5F9\"/>\r\n                    <InputOption Icon={SubscriptionsIcon} title='Video' color=\"#E7A33E\"/>\r\n                    <InputOption Icon={EventNoteIcon} title='Event' color=\"#C0CBCD\"/>\r\n                    <InputOption Icon={CalendarViewDayIcon} title='Write article' color=\"#7FC15E\"/>\r\n                </div>\r\n            </div>\r\n            {/* Posts */}\r\n            <FlipMove>\r\n                {posts.map(({id, data: {name, description, message, photoUrl}}) => (\r\n                    <Post\r\n                        key={id}\r\n                        name={name}\r\n                        description={description}\r\n                        message={message}\r\n                        photoUrl={photoUrl}\r\n                    />\r\n            ))}\r\n            </FlipMove>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from './features/userSlice'\r\nimport \"./HeaderOption.css\"\r\n\r\nfunction HeaderOption({ avatar, Icon, title, onClick }) {\r\n    const user = useSelector(selectUser);\r\n\r\n    return (\r\n        <div onClick={onClick} className=\"headerOption\">\r\n            {/* If i pass in an icon, only then should i render the icon\r\n            itself as a component */}\r\n            {Icon && < Icon className=\"headerOption__icon\" />}\r\n            {avatar &&\r\n             <Avatar className=\"headerOption__icon\" src={user?.photoUrl}>{user?.email[0]}\r\n             </Avatar>\r\n             }\r\n            <h3 className=\"headerOption__title\">{title}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderOption\r\n","import React from 'react'\r\nimport \"./Header.css\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HeaderOption from './HeaderOption';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { auth } from './firebase';\r\nimport { logout, selectUser } from './features/userSlice';\r\n\r\nfunction Header() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutOfApp = () => {\r\n    dispatch(logout())\r\n        auth.signOut();\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\" alt=\"\"/>\r\n                <div className=\"header__search\">\r\n                    {/* Search Icon */}\r\n                    <SearchIcon/>\r\n                    <input placeholder=\"Search\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"header__right\">\r\n                <HeaderOption Icon={HomeIcon} title=\"Home\" />\r\n                <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network\" />\r\n                <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\r\n                <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\r\n                <HeaderOption Icon={NotificationsIcon} title=\"Notifications\" />\r\n                <HeaderOption avatar={true}\r\n                title=\"me\"\r\n                onClick={logoutOfApp}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n"," import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\n import \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n    const user = useSelector(selectUser);\r\n\r\n    const recentItem = (topic) => (\r\n        <div className=\"sidebar__recentItem\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                <img src=\"https://images.unsplash.com/photo-1618035881605-dfe8d7eb387b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\" alt=\"\"/>\r\n                <Avatar src={user.photoUrl} className=\"sidebar__avatar\">\r\n                    {user.email[0]}\r\n                </Avatar>\r\n                <h2>{user.displayName}</h2>\r\n                <h4>{user.email}</h4>\r\n            </div>\r\n\r\n            <div className=\"sidebar__stats\">\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Who Viewed you</p>\r\n                    <p className=\"sidebar__statNumber\">2,543</p>\r\n                </div>\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Views on post</p>\r\n                    <p className=\"sidebar__statNumber\">2,448</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__bottom\">\r\n                <p>Recent</p>\r\n                {recentItem('reactjs')}\r\n                {recentItem('programming')}\r\n                {recentItem('softwareengineer')}\r\n                {recentItem('design')}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from './features/userSlice';\r\nimport { auth } from './firebase';\r\nimport \"./Login.css\"\r\n\r\nfunction Login() {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const loginToApp = (e) => {\r\n        e.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n        .then(userAuth => {\r\n            dispatch(login({\r\n                email: userAuth.user.email,\r\n                uid: userAuth.user.uid,\r\n                displayName: userAuth.user.displayName,\r\n                profileUrl: userAuth.user.photoURL\r\n            }))\r\n        }).catch(error => alert(error));\r\n    }\r\n\r\n    const register = () => {\r\n        if (!name) {\r\n            return alert(\"Please enter a full name!\")\r\n        }\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n        // If i create the user successfully\r\n        .then((userAuth) => {\r\n            userAuth.user.updateProfile({\r\n                // displayName and photoURL are keys referred to firebase\r\n                displayName: name,\r\n                photoURL: profilePic,\r\n            })\r\n            .then(() => {\r\n                dispatch(\r\n                    login({\r\n                    email: userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    displayName: name,\r\n                    photoUrl: profilePic\r\n                })\r\n              )\r\n            })\r\n        })\r\n        .catch((error) => alert(error));\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <img\r\n                src=\"https://news.hitb.org/sites/default/files/styles/large/public/field/image/500px-LinkedIn_Logo.svg__1.png?itok=q_lR0Vks\"\r\n                alt=\"\"\r\n            />\r\n            <form>\r\n                <input value={name} onChange={e => setName(e.target.value)} placeholder=\"Full name (required if registering)\" type=\"text\"/>\r\n\r\n                <input value={profilePic} onChange={e => setProfilePic(e.target.value)} placeholder=\"Profile pic URL (optional)\" type=\"text\"/>\r\n\r\n                <input value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" type=\"email\"/>\r\n\r\n                <input value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" type=\"password\"/>\r\n\r\n                <button type=\"submit\" onClick={loginToApp}>Sign In</button>\r\n            </form>\r\n            <p>Not a member?{\" \"}\r\n                <span className=\"login__register\" onClick={register}>Register Now</span>\r\n            </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport \"./Widgets.css\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nfunction Widgets() {\r\n\r\n    const newsArticle = (heading, subtitle) => (\r\n        <div className=\"widgets__article\">\r\n            <div className=\"widgets__articleLeft\">\r\n                <FiberManualRecordIcon />\r\n            </div>\r\n\r\n            <div className=\"widgets__articleRight\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__header\">\r\n                <h2>LinkedIn News</h2>\r\n                <InfoIcon />\r\n            </div>\r\n            {newsArticle(\"People who have recovered from COVID-19 may be at risk of developing blood clots: Singapore study\", \"Research Assistant Florence Chioh and Assistant Professor Christine Cheung analysing the data from 30 blood samples of recovered COVID-19 patients.\")}\r\n            {newsArticle(\"Covid-19: Singapore Updates\", \"14 new COVID-19 cases in Singapore, all imported\")}\r\n            {newsArticle(\"More than 18,200 people visited Singapore through unilateral border openings; 70% from China\", \" about 2,400 travellers from Australia, 800 from Brunei, as well as 12,800 from mainland China, which made up about 70 per cent of the total number\")}\r\n            {newsArticle(\"Leaders of Malaysia, Singapore to discuss reopening of border: Hishammuddin\", \" KLUANG: Malaysia Prime Minister Muhyiddin Yassin is expected to discuss the reopening of the border with Singapore Prime Minister Lee Hsien Loong early May, said Malaysian Foreign Minister Hishammuddin Hussein on Monday (Apr 12).\")}\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Feed from './Feed';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { login, logout, selectUser } from \"./features/userSlice\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport Login from './Login';\nimport { auth } from './firebase';\nimport Widgets from './Widgets';\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Listener to listen to any authentication changes\n    auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        // User is logged in\n        dispatch(login({\n          email: userAuth.email,\n          uid: userAuth.uid,\n          displayName: userAuth.displayName,\n          photoUrl: userAuth.photoURL\n        }))\n\n      } else {\n        // User is logged out\n        dispatch(logout());\n      }\n    })\n\n  }, [])\n\n\n  return (\n    // BEM\n    <div className=\"app\">\n      {/* Header */}\n      <Header/>\n\n      {!user ? (\n        <Login /> \n      ) : (\n        <div className=\"app__body\">\n          <Sidebar/>\n          <Feed/>\n          <Widgets/>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n+  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}